{"version":3,"sources":["services/httpService.js","components/navBar.jsx","services/clientes.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/linea.jsx","components/operacion.jsx","components/cliente.jsx","components/representante.jsx","components/listaRepresentantes.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/utils/paginate.js","components/menuRepresentantes.jsx","components/areaReservada.jsx","components/blog.jsx","components/home.jsx","components/notFound.jsx","components/admin/sidebar.jsx","components/admin/clientesAdmin.jsx","components/admin/permisosAdmin.jsx","components/admin/articulosAdmin.jsx","components/admin/dashboard.jsx","components/common/input.jsx","components/common/form.jsx","components/loginForm.jsx","components/registerForm.jsx","services/archivos.js","components/common/docView.jsx","components/scans.jsx","App.js","serviceWorker.js","services/logServices.js","index.js"],"names":["axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","post","get","put","update","delete","NavBar","handleLogout","history","sessionStorage","removeItem","window","location","handleGetAll","a","token","getItem","httpService","apiEndPoint3","headers","Authorization","data","alert","NombreUsuario","this","props","className","to","onClick","Fragment","Component","getClientes","repre","getData","result","codrep","reps","representantes","filter","rep","totalRepresentantes","length","getRepres","map","_","pick","nEndPoint","config","cachedData","JSON","parse","Math","abs","Date","FechaCache","now","liveData","nData","setItem","stringify","TableHeader","sortColumn","onSort","listaCampos","ordenIcon","order","campo","key","path","style","width","label","TableBody","item","colSpan","content","listaElementos","campoClave","renderCell","Table","listaOrdenada","Linea","linea","coart","descripcion","cantidad","precio","Number","parseFloat","toFixed","ref_linea","Operacion","doc","documento","tipodoc","codigodoc","fechapedido","replace","referencia","Importebruto","lineas","codLinea","Cliente","cli","cliente","codigo","rzs","poblacion","totalDocumentos","documentos","Representante","state","handleSortCustomers","header","setState","repres","listaclientes","Clientes","orderBy","nombre","ListaRepresentantes","resultConsulta","backgroundColor","Pagination","itemCount","currentPage","itemsPerPage","pageClicked","numpages","ceil","pages","range","aria-label","href","aria-hidden","page","ListGroup","itemList","onItemSelect","defaultItemClass","paginaActual","handlePageClicked","itemId","itemValue","selectedItem","itemsOrdenados","itemsToShow","items","pageNumber","pageSize","startIndex","slice","paginate","cursor","claseItem","defaultProps","MenuRepresentantes","listaRepresentantes","selectedRepre","FechaConsulta","paddingLeft","toLocaleTimeString","AreaReservada","handleListGroupClick","lr","Blog","autor","user","match","params","mes","anno","qs","search","queryString","sortBy","verified","Home","goTo","ruta","push","NotFound","Sidebar","ClientesAdmin","PermisosAdmin","ArticulosAdmin","Dashboard","id","component","Input","name","rest","htmlFor","Form","errors","validate","schema","abortEarly","details","message","validateProperty","input","value","obj","objSubSchema","objSchema","Joi","object","handleSubmit","e","preventDefault","doSubmit","handleChange","currentTarget","errorMessage","disabled","type","onChange","LoginForm","username","password","string","email","minDomainSegments","tlds","allow","required","min","max","http","onSubmit","renderInput","renderButton","RegisterForm","mail","alphanum","getScans","tipoScan","fclientes","Scanners","apiEndPoint","DocView","tipo","src","substring","alt","Scans","componentDidMount","cd","td","scans","handleClick","rutaPDF","success","ta","scan","numerador","TipoImagen","document","url","App","jwt","payload","jwtDecode","render","from","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Sentry","dsn","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"goBAGAA,IAAMC,aAAaC,SAASC,IAAI,MAAM,SAAAC,GAWpC,OATEA,EAAMF,UACoB,MAA1BE,EAAMF,SAASG,QACfD,EAAMF,SAASG,QAAU,MAGzBC,QAAQC,IAAI,qBACZC,IAAMJ,MAAM,oCAGPK,QAAQC,OAAON,MAGT,OACbO,KAAMX,IAAMW,KACZC,IAAKZ,IAAMY,IACXC,IAAKb,IAAMa,IACXC,OAAQd,IAAMc,OACdC,OAAQf,IAAMe,Q,QC2DDC,E,2MA3EbC,aAAe,SAAAC,GACbC,eAAeC,WAAW,YAC1BD,eAAeC,WAAW,cAC1BC,OAAOC,SAAW,K,EAGpBC,a,sBAAe,gCAAAC,EAAA,6DACPC,EAAQN,eAAeO,QAAQ,YADxB,kBAGYC,EAAYf,IACjCgB,eAAe,mBACf,CACEC,QAAS,CAAEC,cAAc,UAAD,OAAYL,MAN7B,gBAGHM,EAHG,EAGHA,KAMRC,MAAMD,GATK,gDAWP,KAAM7B,UAAsC,MAA1B,KAAMA,SAASG,QACnC2B,MAAM,iBAZG,yD,wEAeN,IAECC,EAAkBC,KAAKC,MAAvBF,cACR,OACE,yBAAKG,UAAU,8BACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,WAGA,kBAAC,IAAD,CAAMD,UAAU,eAAeC,GAAG,SAAlC,QAIA,kBAAC,IAAD,CAAMD,UAAU,eAAeC,GAAG,OAAlC,qBAIA,kBAAC,IAAD,CAAMD,UAAU,eAAeC,GAAG,cAAlC,kBAGA,kBAAC,IAAD,CACEC,QAASJ,KAAKX,aACda,UAAU,eACVC,GAAG,cAHL,WAOEJ,GACA,kBAAC,IAAMM,SAAP,KACE,kBAAC,IAAD,CAAMH,UAAU,eAAeC,GAAG,UAAlC,SAIA,kBAAC,IAAD,CAAMD,UAAU,eAAeC,GAAG,aAAlC,aAMHJ,GACC,kBAAC,IAAMM,SAAP,KACE,kBAAC,IAAD,CAAMH,UAAU,eAAeC,GAAG,WAC/BJ,GAGH,kBAAC,IAAD,CAAMK,QAASJ,KAAKjB,aAAcmB,UAAU,eAAeC,GAAG,KAA9D,gB,GAlESG,a,yBCDN,SAAeC,EAA9B,kC,4CAAe,WAA2BC,GAA3B,iBAAAlB,EAAA,sEACMmB,IADN,UACTC,EADS,OAEQ,IAAjBF,EAAMG,OAFG,yCAEkBD,GAFlB,cAGTE,EAHS,YAGEF,EAAOG,gBAEtBH,EAAOG,eAAiBD,EAAKE,QAAO,SAAAC,GAAG,OAAIA,EAAIJ,SAAWH,EAAMG,UAChED,EAAOM,oBAAsBN,EAAOG,eAAeI,OANtC,kBAQNP,GARM,4C,sBAWR,SAAeQ,IAAtB,+B,4CAAO,4BAAA5B,EAAA,sEAEcmB,IAFd,cAEDC,EAFC,kCAKIA,EAAOG,eAAeM,KAAI,SAAAX,GAC/B,OAAOY,IAAEC,KAAKb,EAAO,CAAC,SAAU,SAAU,sBANzC,uCASHpC,QAAQC,IAAI,kBAAZ,MATG,kBAUI,IAVJ,0D,+BAcQoC,I,2EAAf,sCAAAnB,EAAA,yDACQgC,EAAYC,EAAO7B,aAAe,qBAMvB,QAJX8B,EAAaC,KAAKC,MAAMzC,eAAeO,QAAQ,iBAKnDmC,KAAKC,IAAI,IAAIC,KAAKL,EAAWM,YAAcD,KAAKE,OAAhD,IAAuE,IAR3E,yCAWWP,GAXX,uBAcYjC,EAAQN,eAAeO,QAAQ,YAd3C,UAgBuCC,EAAYf,IAAI4C,EAAW,CAC1D3B,QAAS,CAAEC,cAAc,UAAD,OAAYL,MAjB5C,wBAgBoByC,EAhBpB,EAgBcnC,MAIFoC,EAAQR,KAAKC,MAAMM,IACnBF,WAAaD,KAAKE,MACxB9C,eAAeiD,QAAQ,aAAcT,KAAKU,UAAUF,IAtB1D,kBAwBaA,GAxBb,yCA0BM7D,QAAQC,IAAI,gBAAZ,MA1BN,kBA2Ba,IA3Bb,2D,sBC5BA,IAwBe+D,EAxBK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACnCC,EAAY,cAAgBH,EAAWI,MAC7C,OACE,2BAAOvC,UAAU,uBACf,4BACGqC,EAAYpB,KAAI,SAAAuB,GACf,OACE,wBACEC,IAAKD,EAAME,KACXxC,QAAS,kBAAMkC,EAAOI,EAAME,OAC5BC,MAAO,CAAEC,MAAOJ,EAAMI,QAErBT,EAAWO,OAASF,EAAME,KACzB,uBAAG1C,UAAWsC,IACZ,KAAM,IACV,0BAAMtC,UAAU,YAAYwC,EAAMK,cCmBjCC,E,mLA/BFC,EAAMP,GACf,MAAsB,MAAlBA,EAAMQ,QAAwB,KAE9BR,EAAMS,QAEN,wBAAIR,IAAKD,EAAME,KAAMM,QAASR,EAAMQ,SACjCR,EAAMS,QAAQF,IAKnB,wBAAIN,IAAKD,EAAME,KAAMM,QAASR,EAAMQ,SACjC9B,IAAE1C,IAAIuE,EAAMP,EAAME,S,+BAIf,IAAD,SAC6C5C,KAAKC,MAAjDmD,EADD,EACCA,eAAgBb,EADjB,EACiBA,YAAac,EAD9B,EAC8BA,WAErC,OACE,+BACGD,EAAejC,KAAI,SAAA8B,GAAI,OACtB,wBAAIN,IAAKM,EAAKI,IACXd,EAAYpB,KAAI,SAAAuB,GAAK,OAAI,EAAKY,WAAWL,EAAMP,e,GAxBpCpC,aC0BTiD,EA1BD,SAAC,GAMR,IALLC,EAKI,EALJA,cACAjB,EAII,EAJJA,YACAc,EAGI,EAHJA,WACAhB,EAEI,EAFJA,WACAC,EACI,EADJA,OAEA,OACE,kBAAC,IAAMjC,SAAP,KACE,2BAAOH,UAAU,qBACf,kBAAC,EAAD,CACEmC,WAAYA,EACZC,OAAQA,EACRC,YAAaA,IAGf,kBAAC,EAAD,CACEa,eAAgBI,EAChBjB,YAAaA,EACbc,WAAYA,OCQPI,EA5BD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,kBAAC,IAAMrD,SAAP,KACE,4BACE,wBAAIH,UAAU,cAAcwD,EAAMC,OAClC,wBAAIzD,UAAU,aAAawD,EAAME,aACjC,wBACE1D,UACqB,IAAnBwD,EAAMG,UAAqC,IAAnBH,EAAMG,SAC1B,cACA,wBAGc,IAAnBH,EAAMG,SAAiB,GAAKH,EAAMG,SAAW,MAC5B,IAAjBH,EAAMI,OACHC,OAAOC,WAAWN,EAAMI,QAAQG,QAAQ,GAAK,UAC7C,KAGR,4BACE,wBAAI/D,UAAU,cAAd,QACA,wBAAIA,UAAU,kBAAkBwD,EAAMQ,WACtC,wBAAIhE,UAAU,eAAd,WCkBOiE,EAtCG,SAAC,GAAwB,IAAXC,EAAU,EAArBC,UACnB,OACE,kBAAC,IAAMhE,SAAP,KACE,4BACE,wBAAIH,UAAU,kBACZ,0BAAMA,UAAW,mBAAqBkE,EAAIE,SACvCF,EAAIE,SACC,IACR,kBAAC,IAAD,CAAMnE,GAAE,iBAAYiE,EAAIE,QAAhB,YAA2BF,EAAIG,YACpCH,EAAIG,YAGT,wBAAIrE,UAAU,cAAd,SAEGkE,EAAII,YAAYC,QAAQ,WAAY,KAEvC,wBAAIvE,UAAU,mBAAd,QAAsCkE,EAAIM,YAC1C,wBAAIxE,UAAU,oBAAd,WACA,wBAAIA,UAAU,gBACZ,2BAAI6D,OAAOC,WAAWI,EAAIO,cAAcV,QAAQ,GAAhD,KADF,WAIF,4BACE,oCACA,wBAAIf,QAAQ,IAAIhD,UAAU,UACxB,2BAAOA,UAAU,SACf,+BACGkE,EAAIQ,OAAOzD,KAAI,SAAAuC,GAAK,OACnB,kBAAC,EAAD,CAAOf,IAAKe,EAAMmB,SAAUnB,MAAOA,aCMpCoB,EAnCC,SAAC,GAAsB,IAAXC,EAAU,EAAnBC,QACjB,OACE,+BACE,+BACE,wBAAI9E,UAAU,aAAayC,IAAKoC,EAAIE,QAClC,wBAAI/E,UAAU,cACZ,gCAAS6E,EAAIE,SAEf,4BACE,4BACGF,EAAIG,IADP,MACeH,EAAII,UADnB,MAIF,wBAAIjF,UAAU,UAAd,SAA8B6E,EAAIK,iBAClC,wBAAIlF,UAAU,UAAd,SAEF,wBAAIyC,IAAKoC,EAAIE,OAAS,QACpB,wBAAI/B,QAAQ,IAAIL,MAAO,CAAEC,MAAO,SAC9B,2BAAO5C,UAAU,8CACf,+BACG6E,EAAIM,WAAWlE,KAAI,SAAAiD,GAAG,OACrB,kBAAC,EAAD,CACEzB,IAAKyB,EAAIE,QAAUF,EAAIG,UACvBF,UAAWD,cC2ChBkB,E,2MAhEbC,MAAQ,CACNlD,WAAY,CAAEO,KAAM,SAAUH,MAAO,Q,EAGvC+C,oBAAsB,SAAAC,GACpB,EAAKC,SAAS,CACZrD,WAAY,CACVO,KAAM6C,EACNhD,MACE,EAAK8C,MAAMlD,WAAWO,OAAS6C,GACK,QAAhC,EAAKF,MAAMlD,WAAWI,MACpB,OAEF,U,wEAKF,IACAkD,EAAW3F,KAAKC,MAAhB0F,OACAtD,EAAerC,KAAKuF,MAApBlD,WACFuD,EAAgBD,EAAOE,SAMvBrC,EAAgBpC,IAAE0E,QACtBF,EACA,CAACvD,EAAWO,MACZ,CAACP,EAAWI,QAGRF,EAAc,CAClB,CACEK,KAAM,SACNG,MAAO,MACPI,QAAS,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAASN,IAAKM,EAAKgC,OAAQD,QAAS/B,KACrDC,QAAS,IACTJ,MAAO,OAET,CAAEF,KAAM,MAAOG,MAAO,UAAWG,QAAS,IAAKJ,MAAO,OACtD,CAAEF,KAAM,kBAAmBG,MAAO,OAAQG,QAAS,IAAKJ,MAAO,OAC/D,CAAEF,KAAM,QAASG,MAAO,IAAKG,QAAS,IAAKJ,MAAO,QAGpD,OACE,kBAAC,IAAMzC,SAAP,KACE,yBAAKH,UAAU,2BACb,gDAAsByF,EAAOI,SAG/B,kBAAC,EAAD,CACEvC,cAAeA,EACfjB,YAAaA,EACbc,WAAY,SACZhB,WAAYA,EACZC,OAAQtC,KAAKwF,2B,GA1DKlF,aC4Bb0F,E,gMA5BX,OAAO,I,+BAEC,IAAD,OACCC,EAAmBjG,KAAKC,MAAxBgG,eAMR,OAJA7H,QAAQC,IACN,wCACG4H,EAAiBA,EAAepF,eAAeI,OAAS,IAG3D,yBAAKf,UAAU,MAAM2C,MAAO,CAAEqD,gBAAiB,YAC5C,IACmB,OAAnBD,EACC,sCAEAA,EAAepF,eAAeM,KAAI,SAAAX,GAAK,OACrC,kBAAC,EAAD,CACEmC,IAAKnC,EAAMG,OACXgF,OAAQnF,EACR8B,OAAQ,EAAKkD,8B,GArBOlF,aCGlC,IA6De6F,EA7DI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACpDC,EAAW7E,KAAK8E,KAAKL,EAAYE,GACjCI,EAAQtF,IAAEuF,MAAM,EAAGH,EAAW,GAGpC,OACE,yBAAKI,aAAW,2BACd,wBAAI1G,UAAU,cACZ,wBACEyC,IAAI,IACJzC,UAAW,cAAgC,IAAhBmG,EAAoB,WAAa,IAC5DjG,QAAS,kBACPiG,EAAc,EAAIE,EAAYF,EAAc,GAAK,OAGnD,uBAAGQ,KAAK,IAAI3G,UAAU,YAAY0G,aAAW,YAC3C,0BAAME,cAAY,QAAlB,QACA,0BAAM5G,UAAU,WAAhB,cAGHwG,EAAMvF,KAAI,SAAA4F,GACT,OACE,wBACEpE,IAAKoE,EACL7G,UACE6G,IAASV,EAAc,mBAAqB,YAE9CjG,QAAS,kBAAMmG,EAAYQ,KAE3B,uBAAGF,KAAK,IAAI3G,UAAU,aACnB6G,OAKT,wBACEpE,IAAK+D,EAAQ,EACbxG,UACE,cAAgBmG,IAAgBG,EAAW,WAAa,IAE1DpG,QAAS,kBACPiG,EAAcG,EAAWD,EAAYF,EAAc,GAAK,OAG1D,uBAAGQ,KAAK,IAAI3G,UAAU,YAAY0G,aAAW,QAC3C,0BAAME,cAAY,QAAlB,QACA,0BAAM5G,UAAU,WAAhB,aC/CN8G,E,2MACJzB,MAAQ,CACN0B,SAAU,GACVC,aAAc,GACdC,iBACE,iFACFC,aAAc,EACdd,aAAc,G,EAGhBe,kBAAoB,SAAAN,GAClB,EAAKrB,SAAS,CAAE0B,aAAcL,K,wEAGtB,IAAD,SAOH/G,KAAKC,MALPgH,EAFK,EAELA,SACAC,EAHK,EAGLA,aACAI,EAJK,EAILA,OACAC,EALK,EAKLA,UACAC,EANK,EAMLA,aAIIC,EAAiBrG,IAAE0E,QAAQmB,EAAU,CAAC,UAAW,CAAC,QAClDS,EAAW,CACf,CAAE/G,OAAQ,EAAGoF,OAAQ,qBADN,mBC7BN,SAAkB4B,EAAOC,EAAYC,GAClD,IAAMC,GAAcF,EAAa,GAAKC,EAEtC,OAAOF,EAAMI,MAAMD,EAAYA,EAAaD,GD4BrCG,CACDP,EACAzH,KAAKuF,MAAM6B,aACXpH,KAAKuF,MAAMe,eALE,CAOf,CAAE3F,QAAS,EAAGoF,OAAQ,yBAGxB,OACE,6BACE,6BACE,kBAAC,EAAD,CACEK,UAAWa,EAAShG,OACpBoF,YAAarG,KAAKuF,MAAM6B,aACxBd,aAActG,KAAKuF,MAAMe,aACzBC,YAAavG,KAAKqH,qBAGtB,6BACE,wBACEnH,UAAU,gCACV2C,MAAO,CAAEoF,OAAQ,YAEhBP,EAAYvG,KAAI,SAAA8B,GAEf,IAAMiF,EACa,IAAjBjF,EAAKqE,GACgB,IAAjBE,EACE,EAAKjC,MAAM4B,iBAAmB,2BAC9B,EAAK5B,MAAM4B,iBAAmB,oBACd,IAAlBlE,EAAKqE,IACa,IAAlBE,EACE,EAAKjC,MAAM4B,iBAAmB,0BAC9B,EAAK5B,MAAM4B,iBAAmB,mBAChCK,IAAiBvE,EAAKqE,GACtB,EAAK/B,MAAM4B,iBAAmB,UAC9B,EAAK5B,MAAM4B,iBAEjB,OACE,wBACE/G,QAAS,WACP8G,EAAajE,IAEfN,IAAKM,EAAKqE,GACVpH,UAAWgI,GAEVjF,EAAKsE,c,GAzEAjH,aAoFxB0G,EAAUmB,aAAe,CACvBb,OAAQ,MACRC,UAAW,QAGEP,QEvDAoB,E,iLAnCH,IAAD,EAOHpI,KAAKC,MALPiH,EAFK,EAELA,aACAmB,EAHK,EAGLA,oBACAC,EAJK,EAILA,cACAC,EALK,EAKLA,cACAzG,EANK,EAMLA,WAGF,OACE,yBAAK5B,UAAU,oBACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEgH,aAAcA,EACdD,SAAUoB,EACVf,OAAO,SACPC,UAAU,SACVC,aAAcc,KAGlB,yBAAKzF,MAAO,CAAE2F,YAAa,OAAStI,UAAU,OACzB,KAAlBqI,EACG,GACA,aAAe,IAAI1G,KAAK0G,GAAeE,qBAE1C,KACkB,KAAlBF,EACG,GACA,eAAc,IAAI1G,KAAKC,GAAY2G,2B,GA7BhBnI,aCiDlBoI,E,2MA5CbnD,MAAQ,CACNU,eAAgB,KAChBoC,oBAAqB,GACrBE,cAAe,GACfD,cAAe,G,EAEjBK,qB,uCAAuB,WAAMnI,GAAN,eAAAlB,EAAA,sEACJiB,EAAYC,GADR,OACfoI,EADe,OAGrB,EAAKlD,SAAS,CACZO,eAAgB2C,EAChBN,cAAe9H,EAAMG,OACrB4H,cAAeK,EAAGL,gBANC,2C,+PAWrBvI,K,SAC6BkB,I,yBAA3BmH,oB,WADG3C,S,gBAIL1F,KAAK2I,qBAAqB,CAAEhI,OAAQ,I,qIAIpC,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,CACEgH,aAAclH,KAAK2I,qBACnBN,oBAAqBrI,KAAKuF,MAAM8C,oBAChCC,cAAetI,KAAKuF,MAAM+C,cAC1BC,cAAevI,KAAKuF,MAAMgD,cAC1BzG,WACE9B,KAAKuF,MAAMU,eACPjG,KAAKuF,MAAMU,eAAenE,WAC1B,KAGR,kBAAC,EAAD,CAAqBmE,eAAgBjG,KAAKuF,MAAMU,sB,GAvC5B3F,a,kBCsCbuI,E,iLAvCH,IACMC,EAAU9I,KAAKC,MAArB8I,KADD,EAEe/I,KAAKC,MAAM+I,MAAMC,OAA/BC,EAFD,EAECA,IAAKC,EAFN,EAEMA,KACPC,EAAKpJ,KAAKC,MAAMb,SAASiK,OAHxB,EAIsBC,IAAY5H,MAAM0H,GAAvCG,EAJD,EAICA,OAAQC,EAJT,EAISA,SAEhB,OACE,kBAAC,IAAMnJ,SAAP,KACE,uCAAayI,GACb,4BACE,4BACE,kBAAC,IAAD,CAAM3I,GAAG,eAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,eAAT,UAEF,4BACE,sCAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,SACP,yCAIN,oCACQ+I,GAAO,QADf,cACgCC,GAAQ,QAExC,wCACUI,EADV,kBACiCC,Q,GAjCtBlJ,aCoBJmJ,E,2MAtBbC,KAAO,SAAAC,GACI,UAATA,EACI,EAAK1J,MAAMjB,QAAQ4K,KAAKD,GACxB,EAAK1J,MAAMjB,QAAQyF,QAAQkF,I,wEAEvB,IAAD,OACP,OACE,kBAAC,IAAMtJ,SAAP,KACE,oCACA,4BACE,4BACE,4BAAQD,QAAS,kBAAM,EAAKsJ,KAAK,WAAjC,SAEF,4BACE,4BAAQtJ,QAAS,kBAAM,EAAKsJ,KAAK,SAAjC,yB,GAfOpJ,aCQJuJ,EARE,WACf,OACE,6BACE,yCADF,IACqB,iECoBVC,E,2MApBbvE,MAAQ,G,wEAEN,OACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMpF,GAAG,wBAAT,iBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,uBAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,uBAAT,mB,GAbUG,aCKPyJ,E,2MANbxE,MAAQ,G,wEAEN,OAAO,+D,GAHiBjF,aCOb0J,E,2MANbzE,MAAQ,G,wEAEN,OAAO,8D,GAHiBjF,aCOb2J,E,2MANb1E,MAAQ,G,wEAEN,OAAO,kE,GAHkBjF,aCuBd4J,G,2MAjBb3E,MAAQ,G,wEAEN,OACE,yBAAKrF,UAAU,UACb,yBAAKA,UAAU,8BAA8BiK,GAAG,mBAC9C,kBAAC,EAAD,OAEF,yBAAKA,GAAG,wBACN,kBAAC,IAAD,CAAOvH,KAAK,sBAAsBwH,UAAWL,IAC7C,kBAAC,IAAD,CAAOnH,KAAK,uBAAuBwH,UAAWH,IAC9C,kBAAC,IAAD,CAAOrH,KAAK,sBAAsBwH,UAAWJ,U,GAX/B1J,a,uCCOT+J,GAZD,SAAApK,GAAU,IACdqK,EAAgCrK,EAAhCqK,KAAMvH,EAA0B9C,EAA1B8C,MAAO7E,EAAmB+B,EAAnB/B,MAAUqM,EADV,aACmBtK,EADnB,0BAGrB,OACE,yBAAKC,UAAU,cACb,2BAAOsK,QAASF,GAAOvH,GACvB,2CAAWwH,EAAX,CAAiBD,KAAMA,EAAMH,GAAIG,EAAMpK,UAAU,kBAChDhC,GAAS,yBAAKgC,UAAU,sBAAsBhC,K,kkBCwFtCuM,G,2MA5FblF,MAAQ,CACN1F,KAAM,GACN6K,OAAQ,I,EAGVC,SAAW,WACT,IAAMjK,EAAS,EAAKkK,OAAOD,SAAS,EAAKpF,MAAM1F,KAAM,CACnDgL,YAAY,IAGd,IAAKnK,EAAOxC,MAAO,OAAO,KAG1B,IAAMwM,EAAS,GARA,uBAUf,YAAiBhK,EAAOxC,MAAM4M,QAA9B,oDAAS7H,EAAT,QAAuCyH,EAAOzH,EAAKL,KAAK,IAAMK,EAAK8H,SAVpD,kFAYf,OAAOL,G,EAGTM,iBAAmB,SAAAC,GAAU,IACnBX,EAAgBW,EAAhBX,KAAMY,EAAUD,EAAVC,MAGRC,EAAG,gBAAMb,EAAOY,GAGhBE,EAAY,gBAAMd,EAAO,EAAKe,UAAUf,IAGxC5J,EAFY4K,KAAIC,OAAOH,GAEJT,SAASQ,GAElC,OAAOzK,EAAOxC,MAAQwC,EAAOxC,MAAM4M,QAAQ,GAAGC,QAAU,M,EAG1DS,aAAe,SAAAC,GACbA,EAAEC,iBACF,IAAMhB,EAAS,EAAKC,WAEpB,GADA,EAAKjF,SAAS,CAAEgF,OAAQA,GAAU,KAC9BA,EAAQ,OAAOtM,QAAQC,IAAI,cAG/B,EAAKsN,Y,EAGPC,aAAe,YAA+B,IAAbX,EAAY,EAA3BY,cAEVhM,EAAI,MAAQ,EAAK0F,MAAM1F,MAE7BA,EAAKoL,EAAMX,MAAQW,EAAMC,MAIzB,IAAMR,EAAM,MAAQ,EAAKnF,MAAMmF,QAEzBoB,EAAe,EAAKd,iBAAiBC,GAEvCa,EAAcpB,EAAOO,EAAMX,MAAQwB,SAC3BpB,EAAOO,EAAMX,MAGzB,EAAK5E,SAAS,CAAE7F,OAAM6K,Y,4EAGX3H,GACX,OACE,4BAAQgJ,SAAU/L,KAAK2K,WAAYzK,UAAU,mBAC1C6C,K,kCAKKuH,EAAMvH,GAAuB,IAAhBiJ,EAAe,uDAAR,OAAQ,EACbhM,KAAKuF,MAAtB1F,EAD8B,EAC9BA,KAAM6K,EADwB,EACxBA,OACd,OACE,kBAAC,GAAD,CACEsB,KAAMA,EACNd,MAAOrL,EAAKyK,GACZ2B,SAAUjM,KAAK4L,aACftB,KAAMA,EACNvH,MAAOA,EACP7E,MAAOwM,EAAOJ,S,GAlFHhK,aCmDJ4L,G,2MA/Cb3G,MAAQ,CAAE1F,KAAM,CAAEsM,SAAU,GAAIC,SAAU,IAAM1B,OAAQ,I,EAExDW,UAAY,CACVc,SAAUb,KAAIe,SACXC,MAAM,CACLC,kBAAmB,EACnBC,KAAM,CAAEC,MAAO,CAAC,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,QAE9DC,WACA3J,MAAM,UACTqJ,SAAUd,KAAIe,SAEXM,IAAI,GACJC,IAAI,IACJF,WACA3J,MAAM,kB,EAEX6H,OAASU,KAAIC,OAAO,EAAKF,W,EAEzBM,S,sBAAW,8BAAArM,EAAA,sEAEqBuN,EAAKpO,KACjCiB,eAAe,sBACf,EAAK6F,MAAM1F,MAJJ,gBAEKN,EAFL,EAEDM,KAKRZ,eAAeC,WAAW,cAC1BD,eAAeC,WAAW,YAC1BD,eAAeiD,QAAQ,WAAY3C,GAEnCJ,OAAOC,SAAW,IAXT,2C,wEAeT,OACE,yBAAKc,UAAU,iBACb,qCACA,0BAAM4M,SAAU9M,KAAKwL,cAClBxL,KAAK+M,YAAY,WAAY,WAC7B/M,KAAK+M,YAAY,WAAY,gBAAc,YAC3C/M,KAAKgN,aAAa,e,GAzCLvC,ICoDTwC,G,2MAtDb1H,MAAQ,CACN1F,KAAM,CAAEsM,SAAU,GAAIC,SAAU,GAAI9B,KAAM,GAAI4C,KAAM,IACpDxC,OAAQ,I,EAGVW,UAAY,CACVc,SAAUb,KAAIe,SACXc,WACAR,IAAI,GACJC,IAAI,IACJF,WACA3J,MAAM,WACTqJ,SAAUd,KAAIe,SACXc,WACAR,IAAI,GACJC,IAAI,IACJF,WACA3J,MAAM,iBACTmK,KAAM5B,KAAIe,SACPC,MAAM,CACLC,kBAAmB,EACnBC,KAAM,CAAEC,MAAO,CAAC,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,QAE9DC,WACA3J,MAAM,UACTuH,KAAMgB,KAAIe,SAEPM,IAAI,GACJC,IAAI,IACJF,WACA3J,MAAM,W,EAEX6H,OAASU,KAAIC,OAAO,EAAKF,W,EAEzBM,SAAW,WACT,EAAK1L,MAAMjB,QAAQyF,QAAQ,Q,wEAI3B,OACE,yBAAKvE,UAAU,iBACb,oDACA,0BAAM4M,SAAU9M,KAAKwL,cAClBxL,KAAK+M,YAAY,WAAY,WAC7B/M,KAAK+M,YAAY,OAAQ,UACzB/M,KAAK+M,YAAY,OAAQ,oBACzB/M,KAAK+M,YAAY,WAAY,gBAAc,YAC3C/M,KAAKgN,aAAa,kB,GAhDFvC,I,8jBCAZ,SAAe2C,GAA9B,uC,8CAAe,WAAwB9I,EAASC,EAAW8I,GAA5C,iBAAA/N,EAAA,sEACMmB,GAAQ6D,EAASC,EAAW8I,GADlC,cACT3M,EADS,OAGT4M,EAHS,MAGQ5M,GAHR,kBAKN4M,EAAUC,UALJ,4C,+BAQA9M,G,qFAAf,WAAuB6D,EAASC,EAAW8I,GAA3C,mBAAA/N,EAAA,6DACQgC,EADR,UACuBC,EAAOiM,YAD9B,sBACuDjJ,EADvD,eACuED,GADvE,kBAIqC7E,EAAYf,IAAI4C,GAJrD,uBAIkBU,EAJlB,EAIYnC,KAJZ,kBAMWmC,GANX,yDAQW,IARX,0D,oCCqBeyL,G,2MA7BblI,MAAQ,G,wEACE,IAAD,EACyBvF,KAAKC,MAA7ByN,EADD,EACCA,KAAM/D,EADP,EACOA,KAAMvJ,EADb,EACaA,QACpB,OACE,yBAAKF,UAAU,OAAO2C,MAAO,CAAEC,MAAO,UACpC,yBACE6K,IACmD,QAAjDhE,EAAKiE,UAAUjE,EAAK1I,OAAS,EAAG0I,EAAK1I,QACjC,mBACA,sBAENf,UAAU,eACV2N,IAAI,KAEN,yBAAK3N,UAAU,aACb,wBAAIA,UAAU,cAAcwN,GAC5B,uBAAGxN,UAAU,aAAb,KACA,4BACEE,QAAS,kBAAMA,EAAQuJ,EAAM+D,IAC7BxN,UAAU,mBAFZ,mB,GAlBYI,aC4EPwN,G,2MAvEbC,kB,sBAAoB,kCAAAzO,EAAA,+DACC,EAAKW,MAAM+I,MAAMC,OAA5B+E,EADU,EACVA,GAAIC,EADM,EACNA,GADM,SAGEb,GAASa,EAAID,EAAI,GAHnB,OAGZE,EAHY,OAKlB,EAAKxI,SAAS,CAAEwI,MAAOA,EAAOF,GAAIA,EAAIC,GAAIA,IALxB,2C,EAQpBE,YAAc,SAACxE,EAAM+D,GAAU,IAAD,EACT,EAAKnI,MAAhByI,EADoB,EACpBA,GAAIC,EADgB,EAChBA,GACZ9O,OAAOC,SAASyH,KACdtF,EAAOiM,YACP,uBACA7D,EACA,OACAqE,EACA,OACAC,EACA,gBACAP,EAEF,EAAKhI,SAAS,CACZ0I,QACE7M,EAAOiM,YACP,uBACA7D,EACA,OACAqE,EACA,OACAC,EACA,gBACAP,IAGJpP,IAAM+P,QAAQ,6D,EAGhB9I,MAAQ,CAAE2I,MAAO,GAAIF,GAAI,GAAIC,GAAI,GAAIK,GAAI,GAAIF,QAAS,I,wEAE5C,IAAD,OACP,IACE,OACE,yBAAKlO,UAAU,UACb,yBAAKA,UAAU,wBACZF,KAAKuF,MAAM2I,MAAM/M,KAAI,SAAAoN,GAAI,OACxB,kBAAC,GAAD,CACE5L,IAAK4L,EAAKC,UACVd,KAAMa,EAAKE,WACX9E,KAAM4E,EAAK5E,KAAO,KAAO4E,EAAKlK,UAC9BjE,QAAS,EAAK+N,kBAIpB,yBAAKjO,UAAU,wBACW,KAAvBF,KAAKuF,MAAM6I,QAAiB,KAC3B,kBAAC,KAAD,CACEM,SAAU,CACRC,IAAK3O,KAAKuF,MAAM6I,aAO5B,MAAOlQ,GAEP,OADAI,IAAMJ,MAAM,uCACL,mC,GAnEOoC,a,qBC6CLsO,I,yNAlCbrJ,MAAQ,G,mFAEN,IACE,IAAMsJ,EAAM5P,eAAeO,QAAQ,YAC7BsP,EAAUC,KAAUF,GAC1B7O,KAAK0F,SAAS,CAAE3F,cAAe+O,EAAQ/O,gBACvC,MAAO7B,O,+BAKT,OACE,8BACE,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAQ6B,cAAeC,KAAKuF,MAAMxF,gBAClC,yBAAKG,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,KAAK,MAAMwH,UAAW1B,IAC7B,kBAAC,IAAD,CAAO9F,KAAK,SAASwH,UAAW8B,KAChC,kBAAC,IAAD,CAAOtJ,KAAK,qBAAqBoM,OAVxB,SAAA/O,GAAK,OAAI,kBAAC,EAAD,eAAM8I,KAAK,QAAW9I,OAWxC,kBAAC,IAAD,CAAO2C,KAAK,aAAawH,UAAWP,IACpC,kBAAC,IAAD,CAAOjH,KAAK,aAAawH,UAAWF,KACpC,kBAAC,IAAD,CAAOtH,KAAK,YAAYwH,UAAW6C,KACnC,kBAAC,IAAD,CAAOrK,KAAK,iBAAiBwH,UAAW0D,KACxC,kBAAC,IAAD,CAAUmB,KAAK,YAAY9O,GAAG,sCAC9B,kBAAC,IAAD,CAAO+O,OAAK,EAACtM,KAAK,IAAIwH,UAAWX,IACjC,kBAAC,IAAD,CAAUtJ,GAAG,sB,GA3BPG,cCJZ6O,GAAcC,QACW,cAA7BjQ,OAAOC,SAASiQ,UAEe,UAA7BlQ,OAAOC,SAASiQ,UAEhBlQ,OAAOC,SAASiQ,SAASrG,MACvB,2DAsCN,SAASsG,GAAgBC,EAAOhO,GAC9BiO,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvK,QACfiK,UAAUC,cAAcQ,YAI1B7R,QAAQC,IACN,iHAKEkD,GAAUA,EAAO2O,UACnB3O,EAAO2O,SAASN,KAMlBxR,QAAQC,IAAI,sCAGRkD,GAAUA,EAAO4O,WACnB5O,EAAO4O,UAAUP,WAO5BQ,OAAM,SAAAlS,GACLE,QAAQF,MAAM,4CAA6CA,M,qBC7F/DmS,EAAY,CACVC,IAAK,+DCQTC,IAASvB,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFN,SAAS8B,eAAe,SFMnB,SAAkBjP,GACvB,GAA6C,kBAAmBiO,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBvR,OAAOC,SAASyH,MACpD8J,SAAWxR,OAAOC,SAASuR,OAIvC,OAGFxR,OAAOyR,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,GAAN,sBAEPvB,KAgEV,SAAiCI,EAAOhO,GAEtCsP,MAAMtB,GACHI,MAAK,SAAA3R,GAEJ,IAAM8S,EAAc9S,EAAS2B,QAAQjB,IAAI,gBAEnB,MAApBV,EAASG,QACO,MAAf2S,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7BxQ,OAAOC,SAAS8R,eAKpB5B,GAAgBC,EAAOhO,MAG1B6O,OAAM,WACLhS,QAAQC,IACN,oEArFA8S,CAAwB5B,EAAOhO,GAI/BiO,UAAUC,cAAcuB,MAAMrB,MAAK,WACjCvR,QAAQC,IACN,iHAMJiR,GAAgBC,EAAOhO,OE5B/BkO,K","file":"static/js/main.15b0d8b3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status === 404 &&\r\n    error.response.status <= 500;\r\n  //   … rutina global para tratar errores\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\");\r\n    toast.error(\"Ha ocurrido un error inesperado\");\r\n  }\r\n\r\n  return Promise.reject(error); // devuelve el control al bloque catch\r\n});\r\n\r\nexport default {\r\n  post: axios.post,\r\n  get: axios.get,\r\n  put: axios.put,\r\n  update: axios.update,\r\n  delete: axios.delete\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport httpService from \"../services/httpService\";\r\nimport { apiEndPoint3 } from \"../config.json\";\r\n\r\nclass NavBar extends Component {\r\n  handleLogout = history => {\r\n    sessionStorage.removeItem(\"apiToken\");\r\n    sessionStorage.removeItem(\"cachedData\");\r\n    window.location = \"/\";\r\n  };\r\n\r\n  handleGetAll = async () => {\r\n    const token = sessionStorage.getItem(\"apiToken\");\r\n    try {\r\n      const { data } = await httpService.get(\r\n        apiEndPoint3 + \"customers/GetAll\",\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n      );\r\n      alert(data);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500)\r\n        alert(\"No Autorizado\");\r\n    }\r\n  };\r\n  render() {\r\n    // console.log(this.props);\r\n    const { NombreUsuario } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          INDESAN\r\n        </Link>\r\n        <Link className=\"navbar-brand\" to=\"/blog\">\r\n          Blog\r\n        </Link>\r\n\r\n        <Link className=\"navbar-brand\" to=\"/ar\">\r\n          Área Reservada\r\n        </Link>\r\n\r\n        <Link className=\"navbar-brand\" to=\"/dashboard\">\r\n          Administracion\r\n        </Link>\r\n        <Link\r\n          onClick={this.handleGetAll}\r\n          className=\"navbar-brand\"\r\n          to=\"/dashboard\"\r\n        >\r\n          GetAll\r\n        </Link>\r\n        {!NombreUsuario && (\r\n          <React.Fragment>\r\n            <Link className=\"navbar-brand\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n\r\n            <Link className=\"navbar-brand\" to=\"/registro\">\r\n              Registro\r\n            </Link>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {NombreUsuario && (\r\n          <React.Fragment>\r\n            <Link className=\"navbar-brand\" to=\"/perfil\">\r\n              {NombreUsuario}\r\n            </Link>\r\n\r\n            <Link onClick={this.handleLogout} className=\"navbar-brand\" to=\"/\">\r\n              Logout\r\n            </Link>\r\n          </React.Fragment>\r\n        )}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import _ from \"lodash\";\r\nimport httpService from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nexport default async function getClientes(repre) {\r\n  var result = await getData();\r\n  if (repre.codrep === 0) return result;\r\n  var reps = [...result.representantes];\r\n\r\n  result.representantes = reps.filter(rep => rep.codrep === repre.codrep);\r\n  result.totalRepresentantes = result.representantes.length;\r\n\r\n  return result;\r\n}\r\n\r\nexport async function getRepres() {\r\n  // TODO :  invocar a un metodo que devuelva solamente los representantes\r\n  var result = await getData();\r\n\r\n  try {\r\n    return result.representantes.map(repre => {\r\n      return _.pick(repre, [\"codrep\", \"nombre\", \"totalClientes\"]);\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error getrepres\", error);\r\n    return {};\r\n  }\r\n}\r\n\r\nasync function getData() {\r\n  const nEndPoint = config.apiEndPoint3 + \"customers/GetAll\";\r\n\r\n  const cachedData = JSON.parse(sessionStorage.getItem(\"cachedData\"));\r\n\r\n  // If cache is older than 25 min we retrieve another batch\r\n  if (\r\n    cachedData !== null &&\r\n    Math.abs(new Date(cachedData.FechaCache) - Date.now()) / (1000 * 60) < 25\r\n  ) {\r\n    //console.log(\"cached \" + new Date(cachedData.FechaCache));\r\n    return cachedData;\r\n  } else {\r\n    try {\r\n      const token = sessionStorage.getItem(\"apiToken\");\r\n\r\n      const { data: liveData } = await httpService.get(nEndPoint, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const nData = JSON.parse(liveData);\r\n      nData.FechaCache = Date.now();\r\n      sessionStorage.setItem(\"cachedData\", JSON.stringify(nData));\r\n\r\n      return nData;\r\n    } catch (error) {\r\n      console.log(\"error getData\", error);\r\n      return {};\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nconst TableHeader = ({ sortColumn, onSort, listaCampos }) => {\r\n  const ordenIcon = \"fa fa-sort-\" + sortColumn.order;\r\n  return (\r\n    <thead className=\"encab-representante\">\r\n      <tr>\r\n        {listaCampos.map(campo => {\r\n          return (\r\n            <th\r\n              key={campo.path}\r\n              onClick={() => onSort(campo.path)}\r\n              style={{ width: campo.width }}\r\n            >\r\n              {sortColumn.path === campo.path ? (\r\n                <i className={ordenIcon}></i>\r\n              ) : null}{\" \"}\r\n              <span className=\"sortable\">{campo.label}</span>\r\n            </th>\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell(item, campo) {\r\n    if (campo.colSpan === \"0\") return null;\r\n\r\n    if (campo.content)\r\n      return (\r\n        <td key={campo.path} colSpan={campo.colSpan}>\r\n          {campo.content(item)}\r\n        </td>\r\n      );\r\n    //campo.content es una función, y se la llama con el argumento item\r\n    return (\r\n      <td key={campo.path} colSpan={campo.colSpan}>\r\n        {_.get(item, campo.path)}\r\n      </td>\r\n    );\r\n  }\r\n  render() {\r\n    const { listaElementos, listaCampos, campoClave } = this.props;\r\n    //hacemos un doble mapeo para las filas (listaElementos) y las columnas (listaCampos)\r\n    return (\r\n      <tbody>\r\n        {listaElementos.map(item => (\r\n          <tr key={item[campoClave]}>\r\n            {listaCampos.map(campo => this.renderCell(item, campo))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody.jsx\";\r\nconst Table = ({\r\n  listaOrdenada,\r\n  listaCampos,\r\n  campoClave,\r\n  sortColumn,\r\n  onSort\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table table-dark \">\r\n        <TableHeader\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n          listaCampos={listaCampos}\r\n        />\r\n\r\n        <TableBody\r\n          listaElementos={listaOrdenada}\r\n          listaCampos={listaCampos}\r\n          campoClave={campoClave}\r\n        />\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Linea = ({ linea }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"celdaCoart\">{linea.coart}</td>\r\n        <td className=\"celdaDesc\">{linea.descripcion}</td>\r\n        <td\r\n          className={\r\n            linea.cantidad === 1 || linea.cantidad === 0\r\n              ? \"celdaPrecio\"\r\n              : \"celdaPrecio multiple\"\r\n          }\r\n        >\r\n          {linea.cantidad === 1 ? \"\" : linea.cantidad + \" x \"}\r\n          {linea.precio !== 0\r\n            ? Number.parseFloat(linea.precio).toFixed(2) + \" €\"\r\n            : \"\"}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"celdaCoart\">&nbsp;</td>\r\n        <td className=\"celdaRef_linea\">{linea.ref_linea}</td>\r\n        <td className=\"celdaPrecio\">&nbsp;</td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Linea;\r\n","import React from \"react\";\r\nimport Linea from \"./linea\";\r\nimport { Link } from \"react-router-dom\";\r\n// al ser una SFC no se requiere importar Component\r\nconst Operacion = ({ documento: doc }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"celdaDocumento\">\r\n          <span className={\"tipodoc tipodoc-\" + doc.tipodoc}>\r\n            {doc.tipodoc}\r\n          </span>{\" \"}\r\n          <Link to={`/scans/${doc.tipodoc}/${doc.codigodoc}`}>\r\n            {doc.codigodoc}\r\n          </Link>\r\n        </td>\r\n        <td className=\"celdaFecha\">\r\n          Fecha:\r\n          {doc.fechapedido.replace(\" 0:00:00\", \"\")}\r\n        </td>\r\n        <td className=\"celdaReferencia\">Ref: {doc.referencia}</td>\r\n        <td className=\"celdaEtiqImporte\">Bruto: </td>\r\n        <td className=\"celdaImporte\">\r\n          <b>{Number.parseFloat(doc.Importebruto).toFixed(2)} </b>€\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>&nbsp;</td>\r\n        <td colSpan=\"4\" className=\"lineas\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {doc.lineas.map(linea => (\r\n                <Linea key={linea.codLinea} linea={linea} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Operacion;\r\n","import React from \"react\";\r\n// al ser una SFC no se requiere importar Component\r\nimport Operacion from \"./operacion\";\r\nconst Cliente = ({ cliente: cli }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr className=\"bg-primary\" key={cli.codigo}>\r\n          <td className=\"codCliente\">\r\n            <strong>{cli.codigo}</strong>\r\n          </td>\r\n          <td>\r\n            <em>\r\n              {cli.rzs} ( {cli.poblacion})\r\n            </em>\r\n          </td>\r\n          <td className=\"numped\">Docs: {cli.totalDocumentos}</td>\r\n          <td className=\"numped\">&nbsp;</td>\r\n        </tr>\r\n        <tr key={cli.codigo + \"-ops\"}>\r\n          <td colSpan=\"4\" style={{ width: \"100%\" }}>\r\n            <table className=\"table table-dark table-sm table-borderless\">\r\n              <tbody>\r\n                {cli.documentos.map(doc => (\r\n                  <Operacion\r\n                    key={doc.tipodoc + doc.codigodoc}\r\n                    documento={doc}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Cliente;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Table from \"./common/table\";\r\nimport Cliente from \"./cliente\";\r\nclass Representante extends Component {\r\n  state = {\r\n    sortColumn: { path: \"codigo\", order: \"asc\" }\r\n  };\r\n\r\n  handleSortCustomers = header => {\r\n    this.setState({\r\n      sortColumn: {\r\n        path: header,\r\n        order:\r\n          this.state.sortColumn.path === header\r\n            ? this.state.sortColumn.order === \"asc\"\r\n              ? \"desc\"\r\n              : \"asc\"\r\n            : \"asc\"\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { repres } = this.props;\r\n    const { sortColumn } = this.state;\r\n    const listaclientes = repres.Clientes;\r\n    //console.log(repres.Clientes);\r\n    // console.log(\r\n    //   `ordenamos los clientes del representante ${nombreRepre} por la columna ${ordenarPor} (${orden})`\r\n    // );\r\n\r\n    const listaOrdenada = _.orderBy(\r\n      listaclientes,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const listaCampos = [\r\n      {\r\n        path: \"codigo\",\r\n        label: \"Cod\",\r\n        content: item => <Cliente key={item.codigo} cliente={item} />,\r\n        colSpan: \"4\",\r\n        width: \"15%\"\r\n      },\r\n      { path: \"rzs\", label: \"Cliente\", colSpan: \"0\", width: \"60%\" },\r\n      { path: \"totalDocumentos\", label: \"Docs\", colSpan: \"0\", width: \"15%\" },\r\n      { path: \"dummy\", label: \" \", colSpan: \"0\", width: \"10%\" }\r\n    ];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row encab-representante\">\r\n          <span>Representante: {repres.nombre}</span>\r\n        </div>\r\n\r\n        <Table\r\n          listaOrdenada={listaOrdenada}\r\n          listaCampos={listaCampos}\r\n          campoClave={\"codigo\"}\r\n          sortColumn={sortColumn}\r\n          onSort={this.handleSortCustomers}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Representante;\r\n","import React, { Component } from \"react\";\r\nimport Representante from \"./representante\";\r\nclass ListaRepresentantes extends Component {\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  render() {\r\n    const { resultConsulta } = this.props;\r\n\r\n    console.log(\r\n      \"renderizada lista de representantes \" +\r\n        (resultConsulta ? resultConsulta.representantes.length : 0)\r\n    );\r\n    return (\r\n      <div className=\"col\" style={{ backgroundColor: \"#d6d8db\" }}>\r\n        {\" \"}\r\n        {resultConsulta === null ? (\r\n          <span>&nbsp;</span>\r\n        ) : (\r\n          resultConsulta.representantes.map(repre => (\r\n            <Representante\r\n              key={repre.codrep}\r\n              repres={repre}\r\n              onSort={this.handleSortCustomers}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListaRepresentantes;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemCount, currentPage, itemsPerPage, pageClicked }) => {\r\n  const numpages = Math.ceil(itemCount / itemsPerPage);\r\n  const pages = _.range(1, numpages + 1);\r\n\r\n  //console.log(itemCount, currentPage, itemsPerPage, pageClicked);\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        <li\r\n          key=\"0\"\r\n          className={\"page-item \" + (currentPage === 1 ? \"disabled\" : \"\")}\r\n          onClick={() =>\r\n            currentPage > 1 ? pageClicked(currentPage - 1) : null\r\n          }\r\n        >\r\n          <a href=\"#\" className=\"page-link\" aria-label=\"Previous\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n        </li>\r\n        {pages.map(page => {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n              onClick={() => pageClicked(page)}\r\n            >\r\n              <a href=\"#\" className=\"page-link\">\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n        <li\r\n          key={pages + 1}\r\n          className={\r\n            \"page-item \" + (currentPage === numpages ? \"disabled\" : \"\")\r\n          }\r\n          onClick={() =>\r\n            currentPage < numpages ? pageClicked(currentPage + 1) : null\r\n          }\r\n        >\r\n          <a href=\"#\" className=\"page-link\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  itemsPerPage: PropTypes.number.isRequired,\r\n  pageClicked: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport paginate from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./pagination\";\r\nclass ListGroup extends Component {\r\n  state = {\r\n    itemList: [],\r\n    onItemSelect: {},\r\n    defaultItemClass:\r\n      \"list-group-item d-flex justify-content-between align-items-center menu-lateral\",\r\n    paginaActual: 1,\r\n    itemsPerPage: 9\r\n  };\r\n\r\n  handlePageClicked = page => {\r\n    this.setState({ paginaActual: page });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      itemList,\r\n      onItemSelect,\r\n      itemId,\r\n      itemValue,\r\n      selectedItem\r\n    } = this.props;\r\n\r\n    //console.log(\"listgroup \" + selectedItem);\r\n    const itemsOrdenados = _.orderBy(itemList, [\"nombre\"], [\"asc\"]);\r\n    const itemsToShow = [\r\n      { codrep: 0, nombre: \"Seleccionar Todo\" },\r\n      ...paginate(\r\n        itemsOrdenados,\r\n        this.state.paginaActual,\r\n        this.state.itemsPerPage\r\n      ),\r\n      { codrep: -1, nombre: \"Borrar Selección\" }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Pagination\r\n            itemCount={itemList.length}\r\n            currentPage={this.state.paginaActual}\r\n            itemsPerPage={this.state.itemsPerPage}\r\n            pageClicked={this.handlePageClicked}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ul\r\n            className=\"list-group list-group-flush  \"\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {itemsToShow.map(item => {\r\n              // determinamos qué clase aplicar al item\r\n              const claseItem =\r\n                item[itemId] === 0 // es el item 0 (encabezado) ?\r\n                  ? selectedItem === 0 // es el seleccionado ?\r\n                    ? this.state.defaultItemClass + \" listGroupHeader active \" // le aplicamos el estilo correspondiente\r\n                    : this.state.defaultItemClass + \" listGroupHeader\"\r\n                  : item[itemId] === -1 // es el ítem -1 (pie)\r\n                  ? selectedItem === -1 // es el seleccionado ?\r\n                    ? this.state.defaultItemClass + \" listGroupFooter active\" // le aplicamos el estilo correspondiente\r\n                    : this.state.defaultItemClass + \" listGroupFooter\"\r\n                  : selectedItem === item[itemId] // // es el seleccionado y no es ni encabezado ni pie?\r\n                  ? this.state.defaultItemClass + \" active\" // le aplicamos el estilo correspondiente\r\n                  : this.state.defaultItemClass;\r\n\r\n              return (\r\n                <li\r\n                  onClick={() => {\r\n                    onItemSelect(item);\r\n                  }}\r\n                  key={item[itemId]}\r\n                  className={claseItem}\r\n                >\r\n                  {item[itemValue]}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListGroup.defaultProps = {\r\n  itemId: \"_id\",\r\n  itemValue: \"name\"\r\n};\r\n\r\nexport default ListGroup;\r\n","export default function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  // console.log(items.slice(startIndex, startIndex + pageSize));\r\n  return items.slice(startIndex, startIndex + pageSize);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ListGroup from \"./common/listGroup\";\r\nclass MenuRepresentantes extends Component {\r\n  render() {\r\n    const {\r\n      onItemSelect,\r\n      listaRepresentantes,\r\n      selectedRepre,\r\n      FechaConsulta,\r\n      FechaCache\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-3 smallprint\">\r\n        <div className=\"row\">\r\n          <ListGroup\r\n            onItemSelect={onItemSelect}\r\n            itemList={listaRepresentantes}\r\n            itemId=\"codrep\" //identificador del elemento\r\n            itemValue=\"nombre\" // valor que se mostrará\r\n            selectedItem={selectedRepre}\r\n          />\r\n        </div>\r\n        <div style={{ paddingLeft: \"2em\" }} className=\"row\">\r\n          {FechaConsulta === \"\"\r\n            ? \"\"\r\n            : \"Consulta: \" + new Date(FechaConsulta).toLocaleTimeString()}\r\n\r\n          {\"  \"}\r\n          {FechaConsulta === \"\"\r\n            ? \"\"\r\n            : \"/ Caché: \" + new Date(FechaCache).toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuRepresentantes;\r\n","import React, { Component } from \"react\";\r\n\r\nimport getClientes, { getRepres } from \"../services/clientes\";\r\nimport ListaRepresentantes from \"./listaRepresentantes\";\r\nimport MenuRepresentantes from \"./menuRepresentantes\";\r\n\r\nclass AreaReservada extends Component {\r\n  state = {\r\n    resultConsulta: null,\r\n    listaRepresentantes: [],\r\n    FechaConsulta: \"\",\r\n    selectedRepre: 0\r\n  };\r\n  handleListGroupClick = async repre => {\r\n    const lr = await getClientes(repre);\r\n\r\n    this.setState({\r\n      resultConsulta: lr,\r\n      selectedRepre: repre.codrep,\r\n      FechaConsulta: lr.FechaConsulta\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      listaRepresentantes: await getRepres()\r\n    });\r\n\r\n    this.handleListGroupClick({ codrep: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <MenuRepresentantes\r\n          onItemSelect={this.handleListGroupClick}\r\n          listaRepresentantes={this.state.listaRepresentantes}\r\n          selectedRepre={this.state.selectedRepre}\r\n          FechaConsulta={this.state.FechaConsulta}\r\n          FechaCache={\r\n            this.state.resultConsulta\r\n              ? this.state.resultConsulta.FechaCache\r\n              : \"\"\r\n          }\r\n        />\r\n        <ListaRepresentantes resultConsulta={this.state.resultConsulta} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AreaReservada;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\n\r\nclass Blog extends Component {\r\n  render() {\r\n    const { user: autor } = this.props;\r\n    const { mes, anno } = this.props.match.params;\r\n    const qs = this.props.location.search;\r\n    const { sortBy, verified } = queryString.parse(qs);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Blog de {autor}</h1>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/blog/enero\">Enero</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/blog/febrero\">Febrero</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/blog/marzo\">Marzo</Link>\r\n          </li>\r\n          <li>\r\n            <span>...</span>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/blog\">\r\n              <em> Todos</em>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <h3>\r\n          mes: {mes || \"todos\"} - Año: {anno || \"2019\"}\r\n        </h3>\r\n        <span>\r\n          orden: {sortBy} / verificado: {verified}\r\n        </span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nclass Home extends Component {\r\n  goTo = ruta => {\r\n    ruta === \"/blog\"\r\n      ? this.props.history.push(ruta)\r\n      : this.props.history.replace(ruta);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Home</h1>\r\n        <ul>\r\n          <li>\r\n            <button onClick={() => this.goTo(\"/blog\")}>Blog</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => this.goTo(\"/ar\")}>Area Reservada</button>\r\n          </li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Error 404</h1> <h2>El recurso solicitado no existe</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/dashboard/articulos\">Artículos</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/dashboard/clientes\">Clientes</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/dashboard/permisos\">Permisos</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nclass ClientesAdmin extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Administracion de clientes </h1>;\r\n  }\r\n}\r\n\r\nexport default ClientesAdmin;\r\n","import React, { Component } from \"react\";\r\nclass PermisosAdmin extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Administracion de Permisos</h1>;\r\n  }\r\n}\r\n\r\nexport default PermisosAdmin;\r\n","import React, { Component } from \"react\";\r\nclass ArticulosAdmin extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Administracion de Artículos</h1>;\r\n  }\r\n}\r\n\r\nexport default ArticulosAdmin;\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./sidebar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ClientesAdmin from \"./clientesAdmin.jsx\";\r\nimport PermisosAdmin from \"./permisosAdmin.jsx\";\r\nimport ArticulosAdmin from \"./articulosAdmin.jsx\";\r\nclass Dashboard extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex\">\r\n        <div className=\"bg-light border-right col-2\" id=\"sidebar-wrapper\">\r\n          <Sidebar />\r\n        </div>\r\n        <div id=\"page-content-wrapper\">\r\n          <Route path=\"/dashboard/clientes\" component={ClientesAdmin} />\r\n          <Route path=\"/dashboard/articulos\" component={ArticulosAdmin} />\r\n          <Route path=\"/dashboard/permisos\" component={PermisosAdmin} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nconst Input = props => {\r\n  const { name, label, error, ...rest } = props;\r\n  //console.log(rest);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Input from \"./input\";\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const result = this.schema.validate(this.state.data, {\r\n      abortEarly: false\r\n    });\r\n\r\n    if (!result.error) return null;\r\n\r\n    //el objeto error contiene un array details que vamos a mapear\r\n    const errors = {}; //en principio, es un objeto vacio\r\n\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    //item.path es un array con un solo elemento, por eso obtenemos su valos así\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = input => {\r\n    const { name, value } = input;\r\n    //debemos devolver un mensaje de error si input.value no cumple con los requisitos\r\n    //para ello debemos definir un subobjeto solo con esa propiedad y un subEsquema solo para esa propiedad\r\n    const obj = { [name]: value }; //[name] es una funcionalidad de ES6 para construri objetos: Computed Property name syntax\r\n    //es equivalente a const obj = {} ; obj[name]= value;\r\n\r\n    const objSubSchema = { [name]: this.objSchema[name] };\r\n    const subSchema = Joi.object(objSubSchema);\r\n\r\n    const result = subSchema.validate(obj);\r\n\r\n    return result.error ? result.error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return console.log(\"No enviado\");\r\n    //procedimiento as seguir si no hay errores. p.ej: reenvio al área reservada\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    //recuperamos el valor de la cuenta del estado\r\n    const data = { ...this.state.data };\r\n    //cambiamos el valor que proceda\r\n    data[input.name] = input.value;\r\n\r\n    //ahora comprobamos si con los nuevos valores se ha producido algun error\r\n    //en primer lugar clonamos el estado actual de errors\r\n    const errors = { ...this.state.errors };\r\n    //implementamos un nuevo método en el que evaluamos\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    // y actualizamos de nuev el estado\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        name={name}\r\n        label={label}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  //no necesitamos un método render, ya que de eso se encargará la instancia\r\n  // render() {\r\n  //     return (  );\r\n  // }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiEndPoint3 } from \"../config.json\";\r\n\r\nclass LoginForm extends Form {\r\n  state = { data: { username: \"\", password: \"\" }, errors: {} };\r\n\r\n  objSchema = {\r\n    username: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tlds: { allow: [\"com\", \"net\", \"es\", \"fr\", \"uk\", \"de\", \"org\", \"*\"] }\r\n      })\r\n      .required()\r\n      .label(\"e-mail\"),\r\n    password: Joi.string()\r\n\r\n      .min(8)\r\n      .max(30)\r\n      .required()\r\n      .label(\"Contraseña\")\r\n  };\r\n  schema = Joi.object(this.objSchema);\r\n\r\n  doSubmit = async () => {\r\n    //console.log(apiEndPoint3 + \"login/authenticate/\", this.state.data);\r\n    const { data: token } = await http.post(\r\n      apiEndPoint3 + \"login/authenticate/\",\r\n      this.state.data\r\n    );\r\n    //console.log(token);\r\n    sessionStorage.removeItem(\"cachedData\");\r\n    sessionStorage.removeItem(\"apiToken\");\r\n    sessionStorage.setItem(\"apiToken\", token);\r\n\r\n    window.location = \"/\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Usuario\")}\r\n          {this.renderInput(\"password\", \"Contraseña\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./common/form\";\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\", mail: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  objSchema = {\r\n    username: Joi.string()\r\n      .alphanum()\r\n      .min(5)\r\n      .max(15)\r\n      .required()\r\n      .label(\"Usuario\"),\r\n    password: Joi.string()\r\n      .alphanum()\r\n      .min(5)\r\n      .max(30)\r\n      .required()\r\n      .label(\"Contraseña\"),\r\n    mail: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tlds: { allow: [\"com\", \"net\", \"es\", \"fr\", \"uk\", \"de\", \"org\", \"*\"] }\r\n      })\r\n      .required()\r\n      .label(\"e-mail\"),\r\n    name: Joi.string()\r\n\r\n      .min(8)\r\n      .max(50)\r\n      .required()\r\n      .label(\"Nombre\")\r\n  };\r\n  schema = Joi.object(this.objSchema);\r\n\r\n  doSubmit = () => {\r\n    this.props.history.replace(\"/ar\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <h1>Registro de usuarios</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Usuario\")}\r\n          {this.renderInput(\"name\", \"Nombre\")}\r\n          {this.renderInput(\"mail\", \"Direccion e-mail\")}\r\n          {this.renderInput(\"password\", \"Contraseña\", \"password\")}\r\n          {this.renderButton(\"Registro\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import httpService from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nexport default async function getScans(tipodoc, codigodoc, tipoScan) {\r\n  var result = await getData(tipodoc, codigodoc, tipoScan);\r\n\r\n  var fclientes = { ...result };\r\n\r\n  return fclientes.Scanners;\r\n}\r\n\r\nasync function getData(tipodoc, codigodoc, tipoScan) {\r\n  const nEndPoint = `${config.apiEndPoint}/JScans?cd=${codigodoc}&td=${tipodoc}`;\r\n\r\n  try {\r\n    const { data: liveData } = await httpService.get(nEndPoint);\r\n\r\n    return liveData;\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass DocView extends Component {\r\n  state = {};\r\n  render() {\r\n    const { tipo, ruta, onClick } = this.props;\r\n    return (\r\n      <div className=\"card\" style={{ width: \"11rem\" }}>\r\n        <img\r\n          src={\r\n            ruta.substring(ruta.length - 3, ruta.length) === \"pdf\"\r\n              ? \"/logoIndesan.jpg\"\r\n              : \"/docindesan_min.jpg\"\r\n          }\r\n          className=\"card-img-top\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{tipo}</h5>\r\n          <p className=\"card-text\"> </p>\r\n          <button\r\n            onClick={() => onClick(ruta, tipo)}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Descargar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocView;\r\n","import React, { Component } from \"react\";\r\nimport getScans from \"../services/archivos\";\r\nimport PDFViewer from \"pdf-viewer-reactjs\";\r\nimport DocView from \"./common/docView\";\r\nimport { toast } from \"react-toastify\";\r\nimport config from \"../config.json\";\r\nclass Scans extends Component {\r\n  componentDidMount = async () => {\r\n    const { cd, td } = this.props.match.params;\r\n\r\n    const scans = await getScans(td, cd, 3);\r\n\r\n    this.setState({ scans: scans, cd: cd, td: td });\r\n  };\r\n\r\n  handleClick = (ruta, tipo) => {\r\n    const { cd, td } = this.state;\r\n    window.location.href =\r\n      config.apiEndPoint +\r\n      \"/JTransferScan?ruta=\" +\r\n      ruta +\r\n      \"&cd=\" +\r\n      cd +\r\n      \"&td=\" +\r\n      td +\r\n      \"&tipoArchivo=\" +\r\n      tipo;\r\n\r\n    this.setState({\r\n      rutaPDF:\r\n        config.apiEndPoint +\r\n        \"/JTransferScan?ruta=\" +\r\n        ruta +\r\n        \"&cd=\" +\r\n        cd +\r\n        \"&td=\" +\r\n        td +\r\n        \"&tipoArchivo=\" +\r\n        tipo\r\n    });\r\n\r\n    toast.success(\"Archivo descargado. Revisa las descargas de tu navegador\");\r\n  };\r\n\r\n  state = { scans: [], cd: \"\", td: \"\", ta: \"\", rutaPDF: \"\" };\r\n\r\n  render() {\r\n    try {\r\n      return (\r\n        <div className=\"d-flex\">\r\n          <div className=\"cardContainer  col-2\">\r\n            {this.state.scans.map(scan => (\r\n              <DocView\r\n                key={scan.numerador}\r\n                tipo={scan.TipoImagen}\r\n                ruta={scan.ruta + \"\\\\\" + scan.documento}\r\n                onClick={this.handleClick}\r\n              ></DocView>\r\n            ))}\r\n          </div>\r\n          <div className=\"cardContainer col-10\">\r\n            {this.state.rutaPDF === \"\" ? null : (\r\n              <PDFViewer\r\n                document={{\r\n                  url: this.state.rutaPDF\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"No se han podido recuperar imagenes\");\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scans;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./components/navBar\";\r\nimport AreaReservada from \"./components/areaReservada\";\r\nimport Blog from \"./components/blog\";\r\nimport Home from \"./components/home\";\r\nimport NotFound from \"./components/notFound\";\r\nimport Dashboard from \"./components/admin/dashboard\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport Scans from \"./components/scans\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport \"./App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    try {\r\n      const jwt = sessionStorage.getItem(\"apiToken\");\r\n      const payload = jwtDecode(jwt);\r\n      this.setState({ NombreUsuario: payload.NombreUsuario });\r\n    } catch (error) {}\r\n  }\r\n  render() {\r\n    const rutaBlog = props => <Blog user=\"Luis\" {...props} />;\r\n\r\n    return (\r\n      <main>\r\n        <ToastContainer />\r\n        <NavBar NombreUsuario={this.state.NombreUsuario} />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/ar\" component={AreaReservada} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/blog/:mes?/:anno?\" render={rutaBlog} />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/registro\" component={RegisterForm} />\r\n            <Route path=\"/scans/:td/:cd\" component={Scans} />\r\n            <Redirect from=\"/mensajes\" to=\"/blog?sortBy=oldest&verified=true\" />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Sentry from \"@sentry/browser\";\r\n\r\nexport default function initLogger() {\r\n  Sentry.init({\r\n    dsn: \"https://41619563761d49c7b78c61af5dfc8bbb@sentry.io/1800383\"\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport initLogger from \"./services/logServices\";\r\n\r\ninitLogger();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}